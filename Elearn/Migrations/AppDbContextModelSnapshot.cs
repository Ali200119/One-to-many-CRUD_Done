// <auto-generated />
using Elearn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Elearn.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Elearn.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Mark Smith",
                            ProfilePhoto = "course_author_2.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Julia Williams",
                            ProfilePhoto = "course_author_3.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 3,
                            FullName = "James S. Morrison",
                            ProfilePhoto = "featured_author.jpg",
                            SoftDelete = false
                        });
                });

            modelBuilder.Entity("Elearn.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "Maecenas rutrum viverra sapien sed ferm entum. Morbi tempor odio eget lacus tempus pulvinar.",
                            Price = 35m,
                            Sales = 352,
                            SoftDelete = false,
                            Title = "Social Media Course"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Description = "Maecenas rutrum viverra sapien sed ferm entum. Morbi tempor odio eget lacus tempus pulvinar.",
                            Price = 35m,
                            Sales = 352,
                            SoftDelete = false,
                            Title = "Marketng Course"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Description = "Maecenas rutrum viverra sapien sed ferm entum. Morbi tempor odio eget lacus tempus pulvinar.",
                            Price = 35m,
                            Sales = 352,
                            SoftDelete = false,
                            Title = "Online Literature Course"
                        });
                });

            modelBuilder.Entity("Elearn.Models.CourseImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            IsMain = true,
                            Name = "course_2.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            IsMain = false,
                            Name = "course_1.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            IsMain = true,
                            Name = "course_3.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            IsMain = false,
                            Name = "course_2.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 3,
                            IsMain = true,
                            Name = "course_1.jpg",
                            SoftDelete = false
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            IsMain = false,
                            Name = "course_3.jpg",
                            SoftDelete = false
                        });
                });

            modelBuilder.Entity("Elearn.Models.Course", b =>
                {
                    b.HasOne("Elearn.Models.Author", "Author")
                        .WithMany("Courses")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Elearn.Models.CourseImage", b =>
                {
                    b.HasOne("Elearn.Models.Course", "Course")
                        .WithMany("CourseImages")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Elearn.Models.Author", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Elearn.Models.Course", b =>
                {
                    b.Navigation("CourseImages");
                });
#pragma warning restore 612, 618
        }
    }
}
